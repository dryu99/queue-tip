{"version":3,"sources":["enums.js","utils/logger.js","socket.js","components/Home.js","components/SignIn.js","components/User.js","components/Queue.js","components/TooltipWrapper.js","components/Users.js","components/Room.js","components/Error.js","App.js","index.js"],"names":["UserTypes","Object","freeze","ADMIN","BASIC","info","console","error","socket","io","emitDequeue","data","callback","emit","SocketEvents","DEQUEUE","JOIN","CREATE_ROOM","DISCONNECT","LEAVE","NEW_USER_JOIN","ROOM_CHECK","ENQUEUE","Home","setCurrentUserType","setRoomCallback","useState","newRoomName","setNewRoomName","history","useHistory","Container","className","Form","Row","Col","xs","Control","value","onChange","e","target","placeholder","Button","onClick","newRoom","newRoomId","uuidv4","trim","logger","name","id","push","preventDefault","variant","type","SignIn","user","room","setUser","addNewUser","addNewQueueUser","newName","setNewName","alertText","setAlertText","nameInputRef","React","createRef","useEffect","ReactDOM","findDOMNode","current","focus","Label","ref","Text","roomId","resData","usersInRoom","usersInQueue","User","isCurrentUser","isAdmin","colourClass","Queue","queueUsers","removeQueueUser","setInQueue","ListGroup","map","qu","i","listItemProps","action","userId","dequeuedUser","key","Item","TooltipWrapper","children","placement","text","OverlayTrigger","overlay","Tooltip","Users","users","length","u","listItem","Room","setUsers","setQueueUsers","inQueue","on","newUser","leftUser","removeUser","enqueuedUser","off","concat","filter","newQueueUser","isUserSignedIn","Fragment","dummy","document","createElement","body","appendChild","window","location","href","select","execCommand","removeChild","size","emitEnqueue","block","Error","App","currentUser","setCurrentUser","setRoom","roomError","setRoomError","match","useRouteMatch","params","path","exact","render","getElementById"],"mappings":"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","file":"static/js/main.a580e2f0.chunk.js","sourcesContent":["export const UserTypes = Object.freeze({\n  ADMIN: 'admin',\n  BASIC: 'basic'\n});","const info = (...params) => {\n  // eslint-disable-next-line no-undef\n  if (process.env.NODE_ENV === 'development') {\n    console.log(...params);\n  }\n};\n\nconst event = (...params) => {\n  info('<EV> ', params);\n};\n\nconst error = (...params) => {\n  console.error(...params);\n};\n\nexport default { info, event, error };","import io from 'socket.io-client';\n\nconst socket = io();\n\nexport const emitCreateRoom = (newRoom, callback) => {\n  socket.emit(SocketEvents.CREATE_ROOM, newRoom, callback);\n};\n\nexport const emitCheckRoom = (roomId, callback) => {\n  socket.emit(SocketEvents.ROOM_CHECK, { roomId }, callback);\n};\n\nexport const emitEnqueue = (data, callback) => {\n  socket.emit(SocketEvents.ENQUEUE, data, callback);\n};\n\nexport const emitDequeue = (data, callback) => {\n  socket.emit(SocketEvents.DEQUEUE, data, callback);\n};\n\nexport const emitJoin = (data, callback) => {\n  socket.emit(SocketEvents.JOIN, data, callback);\n};\n\nexport const SocketEvents = Object.freeze({\n  JOIN: 'join',\n  CREATE_ROOM: 'create_room',\n  DISCONNECT: 'disconnect',\n  LEAVE: 'leave',\n  NEW_USER_JOIN: 'new_user_join',\n  ROOM_CHECK: 'room_check',\n  ENQUEUE: 'enqueue',\n  DEQUEUE: 'dequeue',\n});\n\nexport default socket;","import React, { useState } from 'react';\nimport { Button, Container, Form, Col } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useHistory } from 'react-router-dom';\nimport { UserTypes } from '../enums';\nimport logger from '../utils/logger';\n\nimport { emitCreateRoom } from '../socket';\n\nconst Home = ({ setCurrentUserType, setRoomCallback }) => {\n  const [newRoomName, setNewRoomName] = useState('');\n\n  const history = useHistory();\n\n  const handleCreateRoomClick = (e) => {\n    const newRoomId = uuidv4();\n\n    if (newRoomId && newRoomName && newRoomName.trim() !== '') {\n      // users who create rooms are admins\n      setCurrentUserType(UserTypes.ADMIN);\n\n      // send a create room event to server\n      logger.info('emitting room creation event');\n      emitCreateRoom(\n        { name: newRoomName, id: newRoomId },\n        setRoomCallback\n      );\n\n      // route to room resource\n      history.push(`/room/${newRoomId}`);\n    } else {\n      e.preventDefault();\n      logger.error('error creating room');\n    }\n  };\n\n  return (\n    <Container className=\"mt-4\">\n      <h1 className=\"text-center mb-5\">queue-tip</h1>\n      <Form>\n        <Form.Row className=\"justify-content-center mb-3\">\n          <Col xs=\"auto\">\n            <Form.Control\n              value={newRoomName}\n              onChange={(e) => setNewRoomName(e.target.value)}\n              placeholder=\"Room Name\"\n            />\n          </Col>\n        </Form.Row>\n        <Form.Row className=\"justify-content-center\">\n          <Col xs=\"auto\">\n            <Button onClick={handleCreateRoomClick} variant=\"primary\" type=\"submit\">Create Room</Button>\n          </Col>\n        </Form.Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Container, Form, Col } from 'react-bootstrap';\nimport { emitJoin } from '../socket';\nimport logger from '../utils/logger';\n\nconst SignIn = ({ user, room, setUser, addNewUser, addNewQueueUser }) => {\n  const [newName, setNewName] = useState('');\n  const [alertText, setAlertText] = useState('');\n\n  // keep track of input component so we can focus on it\n  const nameInputRef = React.createRef();\n\n  // if popup is visible, focus on name input component\n  useEffect(() => {\n    // eslint-disable-next-line react/no-find-dom-node\n    ReactDOM.findDOMNode(nameInputRef.current).focus();\n\n  }, [nameInputRef]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    emitJoin({ name: newName, type: user.type, roomId: room.id }, (resData) => {\n      const { user, usersInRoom, usersInQueue, error } = resData;\n      logger.info('acknowledged from JOIN event', user);\n\n      if (!error) {\n        setUser(user);\n        addNewUser([...usersInRoom, user]);\n        addNewQueueUser(usersInQueue);\n      } else {\n        logger.error(error);\n        setAlertText('Name is already taken, please try something else.');\n      }\n    });\n  };\n\n  return (\n    <Container className=\"mt-4\">\n      <h1 className=\"text-center mb-5\">Sign In</h1>\n      <Form>\n        <Form.Row className=\"justify-content-center mb-3\">\n          <Col xs=\"auto\">\n            <Form.Label>Your Name</Form.Label>\n            <Form.Control\n              ref={nameInputRef}\n              value={newName}\n              onChange={(e) => setNewName(e.target.value)}\n              placeholder=\"Gregor Kiczales\"\n            />\n          </Col>\n          <Form.Text className=\"text-muted\">\n            {alertText}\n          </Form.Text>\n        </Form.Row>\n        <Form.Row className=\"justify-content-center\">\n          <Col xs=\"auto\">\n            <Button\n              onClick={handleSubmit}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Enter Room\n            </Button>\n          </Col>\n        </Form.Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default SignIn;","import React from 'react';\nimport { UserTypes } from '../enums';\n\nconst User = ({ user, isCurrentUser }) => {\n  const isAdmin = user.type === UserTypes.ADMIN;\n  const colourClass = isAdmin\n    ? 'text-danger'\n    : isCurrentUser\n      ? 'text-primary'\n      : '';\n\n  return (\n    <span className={colourClass}>\n      {user.name} {isAdmin ? '(admin)' : ''}\n    </span>\n  );\n};\n\nexport default User;","import React from 'react';\nimport { Row, Col, Container, ListGroup } from 'react-bootstrap';\nimport { UserTypes } from '../enums';\nimport User from './User';\nimport { emitDequeue } from '../socket';\nimport logger from '../utils/logger';\n\nconst Queue = ({ room, user, queueUsers, removeQueueUser, setInQueue }) => {\n\n  const removeUserFromQueue = (e, userId) => {\n    emitDequeue({ userId, roomId: room.id }, (data) => {\n      logger.info('acknowledged from DEQUEUE event', data.dequeuedUser);\n      removeQueueUser(data.dequeuedUser.id);\n\n      if (data.dequeuedUser.id === user.id) {\n        setInQueue(false);\n      }\n    });\n  };\n\n  return (\n    <div >\n      <h4>Queue</h4>\n      <ListGroup>\n        {queueUsers.map((qu, i) => {\n          const isCurrentUser = user.name === qu.name;\n          const isAdmin = user.type === UserTypes.ADMIN;\n\n          const listItemProps = {\n            // variant: isCurrentUser ? 'secondary' : null,\n            action: isAdmin ? true : false,\n            onClick: isAdmin ? (e) => removeUserFromQueue(e, qu.id) : null\n          };\n\n          return (\n            <Container key={qu.id}>\n              <Row className=\"align-items-center\">\n                <Col xs=\"auto\">\n                  <b>{i + 1}</b>\n                </Col>\n                <Col>\n                  <ListGroup.Item {...listItemProps}>\n                    <User user={qu} isCurrentUser={isCurrentUser}/>\n                  </ListGroup.Item>\n                </Col>\n              </Row>\n            </Container>\n          );\n        })}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default Queue;\n\n","import React from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nconst TooltipWrapper = ({ children, placement, text }) => {\n  return (\n    <OverlayTrigger\n      placement={placement}\n      overlay={\n        <Tooltip>{text}</Tooltip>\n      }\n    >\n      {children}\n    </OverlayTrigger>\n  );\n};\n\nexport default TooltipWrapper;","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport User from './User';\nimport TooltipWrapper from './TooltipWrapper';\n\nconst Users = ({ user, users }) => {\n\n  return (\n    <div>\n      <h4>Users: {users.length}</h4>\n      <ListGroup>\n        {users.map(u => {\n          const isCurrentUser = user.name === u.name;\n\n          const listItemProps = {\n            // variant: isCurrentUser ? 'secondary' : null,\n            action: isCurrentUser ? true : false,\n          };\n\n          const listItem = (\n            <ListGroup.Item key={u.id} {...listItemProps}>\n              <User user={u} isCurrentUser={isCurrentUser}/>\n            </ListGroup.Item>\n          );\n\n          return (\n            isCurrentUser ?\n              <TooltipWrapper\n                key={u.id}\n                placement=\"left\"\n                text=\"You!\">\n                {listItem}\n              </TooltipWrapper>\n              :\n              listItem\n          );\n        })}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default Users;","import React, { useState, useEffect } from 'react';\nimport { Col, Container, Row, Button } from 'react-bootstrap';\nimport socket, { SocketEvents, emitEnqueue, emitDequeue } from '../socket';\nimport logger from '../utils/logger';\n\nimport SignIn from './SignIn';\nimport Queue from './Queue';\nimport Users from './Users';\n\nconst Room = ({ room, user, setUser }) => {\n  const [users, setUsers] = useState([]);\n  const [queueUsers, setQueueUsers] = useState([]);\n  const [inQueue, setInQueue] = useState(false);\n\n  // subscribe to relevant socket events\n  useEffect(() => {\n    // when another user joins, add them to user list\n    socket.on(SocketEvents.NEW_USER_JOIN, ({ newUser }) => {\n      logger.info('received JOIN event', newUser);\n      addNewUser(newUser);\n    });\n\n    // when another user leaves, remove them from user list\n    socket.on(SocketEvents.LEAVE, ({ leftUser }) => {\n      logger.info('received LEAVE event', leftUser);\n      removeUser(leftUser.id);\n      removeQueueUser(leftUser.id);\n    });\n\n    // when another user joins queue, add them to queue list\n    socket.on(SocketEvents.ENQUEUE, ({ enqueuedUser }) => {\n      logger.info('received ENQUEUE event', enqueuedUser);\n      addNewQueueUser(enqueuedUser);\n    });\n\n    // when another user joins queue, add them to queue list\n    socket.on(SocketEvents.DEQUEUE, ({ dequeuedUser }) => {\n      logger.info('received DEQUEUE event', dequeuedUser);\n      removeQueueUser(dequeuedUser.id);\n\n      if (dequeuedUser.id === user.id) {\n        setInQueue(false);\n      }\n    });\n\n    // on component unmount, disconnect and turn off socket\n    return () => {\n      socket.emit(SocketEvents.DISCONNECT, 'testtesttest');\n      socket.off();\n    };\n  }, [users, queueUsers]);\n\n  const addNewUser = (newUser) => {\n    setUsers(users.concat(newUser));\n  };\n\n  const removeUser = (id) => {\n    setUsers(users.filter(u => u.id !== id));\n  };\n\n  const addNewQueueUser = (newQueueUser) => {\n    setQueueUsers(queueUsers.concat(newQueueUser));\n  };\n\n  const removeQueueUser = (id) => {\n    setQueueUsers(queueUsers.filter(u => u.id !== id));\n  };\n\n\n  const copyLinkToClipboard = (e) => {\n    // TODO manipulating DOM here directly feels sketchy, doing it the react way doesn't work see comments below\n    var dummy = document.createElement('textarea');\n    document.body.appendChild(dummy);\n    dummy.value = window.location.href;\n    dummy.select();\n    document.execCommand('copy');\n    document.body.removeChild(dummy);\n  };\n\n  const handleQueueToggle = (e) => {\n    if (inQueue) {\n      emitDequeue({ userId: user.id, roomId: room.id }, (data) => {\n        logger.info('acknowledged from DEQUEUE event', data.dequeuedUser);\n        removeQueueUser(data.dequeuedUser.id);\n        setInQueue(false);\n      });\n    } else {\n      emitEnqueue({ userId: user.id, roomId: room.id }, (data) => {\n        logger.info('acknowledged from ENQUEUE event', data.enqueuedUser);\n        addNewQueueUser(data.enqueuedUser);\n        setInQueue(true);\n      });\n    }\n  };\n\n  // user is considered signed in when name and id exist\n  const isUserSignedIn = user && user.name && user.id;\n\n  return (\n    <Container className=\"mt-4\">\n      {room && isUserSignedIn ?\n        <React.Fragment>\n          <Row>\n            <Col>\n              <h1>{room.name}</h1>\n            </Col>\n            <Col xs=\"auto\">\n              <Button onClick={copyLinkToClipboard} size=\"lg\" variant=\"secondary\">\n                Copy Link\n              </Button>\n            </Col>\n            <Col xs=\"3\">\n              <Button onClick={handleQueueToggle} size=\"lg\" block>\n                {inQueue ? 'Leave Queue' : 'Join Queue'}\n              </Button>\n            </Col>\n          </Row>\n          <hr/>\n          <Row>\n            <Col>\n              <Queue\n                room={room}\n                user={user}\n                queueUsers={queueUsers}\n                removeQueueUser={removeQueueUser}\n                setInQueue={setInQueue}\n              />\n            </Col>\n            <Col xs=\"3\">\n              <Users user={user} users={users} />\n            </Col>\n          </Row>\n        </React.Fragment>\n        :\n        <SignIn\n          room={room}\n          user={user}\n          setUser={setUser}\n          addNewUser={addNewUser}\n          addNewQueueUser={addNewQueueUser}\n        />\n      }\n      {/* strangely enough, doing this doesn't work for copying to clipboard - setting display to none causes the copied value to be \"window.location.href\" */}\n      {/* <textarea ref={linkRef} style={{ display: 'none' }} value={window.location.href}/> */}\n    </Container>\n  );\n};\n\nexport default Room;","import React from 'react';\n\nconst Error = ({ text }) => {\n  return (\n    <div>\n      {text}\n    </div>\n  );\n};\n\nexport default Error;","import React, { useEffect, useState } from 'react';\nimport Home from './components/Home';\nimport Room from './components/Room';\nimport Error from './components/Error';\nimport logger from './utils/logger';\n\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from 'react-router-dom';\n\nimport { emitCheckRoom } from './socket';\nimport { UserTypes } from './enums';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({ type: UserTypes.BASIC });\n  const [room, setRoom] = useState(null);\n  const [roomError, setRoomError] = useState(null);\n\n  const match = useRouteMatch('/room/:id');\n\n  // if user entered via link, check to see if specified room id exists and init room\n  useEffect(() => {\n    if (match && !room) {\n      logger.info('emitting room check event');\n      emitCheckRoom(match.params.id, setRoomCallback);\n    }\n  }, [match, room]);\n\n  const setCurrentUserType = (type) => {\n    setCurrentUser({ ...currentUser, type });\n  };\n\n  // socket event acknowledgement callback\n  const setRoomCallback = (resData) => {\n    const { room, error } = resData;\n    logger.info('room event acknowledged', room);\n    if (room && !error) {\n      setRoom(room);\n    } else {\n      logger.info(error);\n      setRoomError('sorry room doesn\\'t exist...');\n    }\n  };\n\n  return (\n    <Switch className=\"mt-4\">\n      <Route path=\"/room/:id\">\n        {!roomError ?\n          <Room room={room} user={currentUser} setUser={setCurrentUser}/>\n          :\n          // would be nice to put a spinner or sth here\n          <Error text={roomError}/>\n        }\n      </Route>\n      <Route exact path=\"/\">\n        <Home\n          setCurrentUserType={setCurrentUserType}\n          setRoomCallback={setRoomCallback}\n        />\n      </Route>\n      <Route>\n        <Error text=\"404 resource not found\"/>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}